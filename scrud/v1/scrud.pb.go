// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: scrud/v1/scrud.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Describes a method on a entity. It mirrors a protobuf rpc method.
type Action struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_ProtoName   *string                `protobuf:"bytes,1,opt,name=proto_name,json=protoName"`
	xxx_hidden_Kind        ActionKind             `protobuf:"varint,3,opt,name=kind,enum=v1.ActionKind"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Action) Reset() {
	*x = Action{}
	mi := &file_scrud_v1_scrud_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_scrud_v1_scrud_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Action) GetProtoName() string {
	if x != nil {
		if x.xxx_hidden_ProtoName != nil {
			return *x.xxx_hidden_ProtoName
		}
		return ""
	}
	return ""
}

func (x *Action) GetKind() ActionKind {
	if x != nil {
		if protoimpl.X.Present(&(x.XXX_presence[0]), 1) {
			return x.xxx_hidden_Kind
		}
	}
	return ActionKind_ACTION_KIND_UNSPECIFIED
}

func (x *Action) SetProtoName(v string) {
	x.xxx_hidden_ProtoName = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Action) SetKind(v ActionKind) {
	x.xxx_hidden_Kind = v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 1, 2)
}

func (x *Action) HasProtoName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Action) HasKind() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 1)
}

func (x *Action) ClearProtoName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_ProtoName = nil
}

func (x *Action) ClearKind() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 1)
	x.xxx_hidden_Kind = ActionKind_ACTION_KIND_UNSPECIFIED
}

type Action_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	ProtoName *string
	Kind      *ActionKind
}

func (b0 Action_builder) Build() *Action {
	m0 := &Action{}
	b, x := &b0, m0
	_, _ = b, x
	if b.ProtoName != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_ProtoName = b.ProtoName
	}
	if b.Kind != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 1, 2)
		x.xxx_hidden_Kind = *b.Kind
	}
	return m0
}

// Entity describes a thing we store in our database. It has not protobuf equivalent and is configured in the
// configuration file.
type Entity struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        *string                `protobuf:"bytes,1,opt,name=name"`
	xxx_hidden_Actions     map[string]*Action     `protobuf:"bytes,4,rep,name=actions" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_raceDetectHookData protoimpl.RaceDetectHookData
	XXX_presence           [1]uint32
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Entity) Reset() {
	*x = Entity{}
	mi := &file_scrud_v1_scrud_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_scrud_v1_scrud_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Entity) GetName() string {
	if x != nil {
		if x.xxx_hidden_Name != nil {
			return *x.xxx_hidden_Name
		}
		return ""
	}
	return ""
}

func (x *Entity) GetActions() map[string]*Action {
	if x != nil {
		return x.xxx_hidden_Actions
	}
	return nil
}

func (x *Entity) SetName(v string) {
	x.xxx_hidden_Name = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 0, 2)
}

func (x *Entity) SetActions(v map[string]*Action) {
	x.xxx_hidden_Actions = v
}

func (x *Entity) HasName() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 0)
}

func (x *Entity) ClearName() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 0)
	x.xxx_hidden_Name = nil
}

type Entity_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name    *string
	Actions map[string]*Action
}

func (b0 Entity_builder) Build() *Entity {
	m0 := &Entity{}
	b, x := &b0, m0
	_, _ = b, x
	if b.Name != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 0, 2)
		x.xxx_hidden_Name = b.Name
	}
	x.xxx_hidden_Actions = b.Actions
	return m0
}

// App is the root description used for code generation.
type App struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Entities map[string]*Entity     `protobuf:"bytes,2,rep,name=entities" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *App) Reset() {
	*x = App{}
	mi := &file_scrud_v1_scrud_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*App) ProtoMessage() {}

func (x *App) ProtoReflect() protoreflect.Message {
	mi := &file_scrud_v1_scrud_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *App) GetEntities() map[string]*Entity {
	if x != nil {
		return x.xxx_hidden_Entities
	}
	return nil
}

func (x *App) SetEntities(v map[string]*Entity) {
	x.xxx_hidden_Entities = v
}

type App_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Entities map[string]*Entity
}

func (b0 App_builder) Build() *App {
	m0 := &App{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Entities = b.Entities
	return m0
}

var File_scrud_v1_scrud_proto protoreflect.FileDescriptor

const file_scrud_v1_scrud_proto_rawDesc = "" +
	"\n" +
	"\x14scrud/v1/scrud.proto\x12\x02v1\x1a google/protobuf/descriptor.proto\x1a\x16scrud/v1/options.proto\"K\n" +
	"\x06Action\x12\x1d\n" +
	"\n" +
	"proto_name\x18\x01 \x01(\tR\tprotoName\x12\"\n" +
	"\x04kind\x18\x03 \x01(\x0e2\x0e.v1.ActionKindR\x04kind\"\x97\x01\n" +
	"\x06Entity\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x121\n" +
	"\aactions\x18\x04 \x03(\v2\x17.v1.Entity.ActionsEntryR\aactions\x1aF\n" +
	"\fActionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\x05value\x18\x02 \x01(\v2\n" +
	".v1.ActionR\x05value:\x028\x01\"\x81\x01\n" +
	"\x03App\x121\n" +
	"\bentities\x18\x02 \x03(\v2\x15.v1.App.EntitiesEntryR\bentities\x1aG\n" +
	"\rEntitiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12 \n" +
	"\x05value\x18\x02 \x01(\v2\n" +
	".v1.EntityR\x05value:\x028\x01B]\n" +
	"\x06com.v1B\n" +
	"ScrudProtoP\x01Z\x1fgithub.com/advdv/scrud/scrud/v1\xa2\x02\x03VXX\xaa\x02\x02V1\xca\x02\x02V1\xe2\x02\x0eV1\\GPBMetadata\xea\x02\x02V1b\beditionsp\xe8\a"

var file_scrud_v1_scrud_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_scrud_v1_scrud_proto_goTypes = []any{
	(*Action)(nil),  // 0: v1.Action
	(*Entity)(nil),  // 1: v1.Entity
	(*App)(nil),     // 2: v1.App
	nil,             // 3: v1.Entity.ActionsEntry
	nil,             // 4: v1.App.EntitiesEntry
	(ActionKind)(0), // 5: v1.ActionKind
}
var file_scrud_v1_scrud_proto_depIdxs = []int32{
	5, // 0: v1.Action.kind:type_name -> v1.ActionKind
	3, // 1: v1.Entity.actions:type_name -> v1.Entity.ActionsEntry
	4, // 2: v1.App.entities:type_name -> v1.App.EntitiesEntry
	0, // 3: v1.Entity.ActionsEntry.value:type_name -> v1.Action
	1, // 4: v1.App.EntitiesEntry.value:type_name -> v1.Entity
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_scrud_v1_scrud_proto_init() }
func file_scrud_v1_scrud_proto_init() {
	if File_scrud_v1_scrud_proto != nil {
		return
	}
	file_scrud_v1_options_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scrud_v1_scrud_proto_rawDesc), len(file_scrud_v1_scrud_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_scrud_v1_scrud_proto_goTypes,
		DependencyIndexes: file_scrud_v1_scrud_proto_depIdxs,
		MessageInfos:      file_scrud_v1_scrud_proto_msgTypes,
	}.Build()
	File_scrud_v1_scrud_proto = out.File
	file_scrud_v1_scrud_proto_goTypes = nil
	file_scrud_v1_scrud_proto_depIdxs = nil
}
